<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nodejs on Tjaart&#39;s homepage</title>
    <link>http://www.tjaart.co.za/tags/nodejs/index.xml</link>
    <description>Recent content in Nodejs on Tjaart&#39;s homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Tjaart van der Walt</copyright>
    <atom:link href="http://www.tjaart.co.za/tags/nodejs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Implementing App Transport Security on NodeJS</title>
      <link>http://www.tjaart.co.za/post/implementing_app_transport_security_on_nodejs/</link>
      <pubDate>Thu, 01 Oct 2015 13:48:22 +0000</pubDate>
      
      <guid>http://www.tjaart.co.za/post/implementing_app_transport_security_on_nodejs/</guid>
      <description>

&lt;h1 id=&#34;what-is-app-transport-security&#34;&gt;What is App Transport Security?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.apple.com/library/prerelease/ios/technotes/App-Transport-Security-Technote/&#34;&gt;ATS&lt;/a&gt; is Apple&amp;rsquo;s term for a set of &amp;ldquo;best practice&amp;rdquo; minimum security requirements that must be met in order for a client to establish a connection with a server. ATS is being enforced by default on &lt;code&gt;iOS 9&lt;/code&gt;, and &lt;code&gt;OSX 10.11&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On Stackoverflow respondents will tell you that &lt;code&gt;ATS = TLS 1.2&lt;/code&gt;, but this is only partly true. ATS actually has 3 requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The server should support at least &lt;code&gt;TLS 1.2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The server should only support connection ciphers that provide &lt;code&gt;forward secrecy&lt;/code&gt; (See the &lt;a href=&#34;https://developer.apple.com/library/prerelease/ios/technotes/App-Transport-Security-Technote/&#34;&gt;complete list&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Certificates needs to be signed with SHA-256, and use at least a 2048-bit RSA  key (or 256-bit ECC key)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;my-experience-implementing-ats&#34;&gt;My experience implementing ATS&lt;/h1&gt;

&lt;h2 id=&#34;diagnosing-problems&#34;&gt;Diagnosing problems&lt;/h2&gt;

&lt;p&gt;Implementing ATS is actually pretty straight forward, but it took me a couple of days to get right. This was mostly due to my ignorance on network security. (In my defence I would note that the client gave supremely unhelpful error messages). Being able to diagnose the problem was the biggest challenge for me. Here are a few tools I found quite useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On Mac OSX 10.11 (El Capitan) you can use &lt;code&gt;nscurl --ats-diagnostics https://example.com&lt;/code&gt; to give you ATS diagnostic information.&lt;/li&gt;
&lt;li&gt;I also found &lt;a href=&#34;https://casecurity.ssllabs.com/&#34;&gt;https://casecurity.ssllabs.com/&lt;/a&gt; extremely useful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;

&lt;p&gt;Implementing ATS in Node is simple. A minimal implementation might look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var https = require(&#39;https&#39;)
var fs = require(&#39;fs&#39;)

var privateKey = fs.readFileSync(&#39;/path/to/my/private/key&#39;, &#39;utf8&#39;)
var certificate = fs.readFileSync(&#39;/path/to/my/certificate&#39;, &#39;utf8&#39;)

var credentials = {
  key: privateKey,
  cert: certificate,
  ciphers: &#39;ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA&#39;
}

server = https.createServer(credentials, app)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;my-mistakes&#34;&gt;My mistakes&lt;/h2&gt;

&lt;h3 id=&#34;certificate-chain&#34;&gt;Certificate chain&lt;/h3&gt;

&lt;p&gt;I am not sure if this was breaking ATS, but &lt;a href=&#34;https://casecurity.ssllabs.com/&#34;&gt;casecurity.sslabs.com&lt;/a&gt;, reported that I was not providing the complete certificate chain, but only the client certificate.&lt;/p&gt;

&lt;p&gt;I was using a certificate issued by &lt;a href=&#34;https://www.godaddy.com/&#34;&gt;Godaddy&lt;/a&gt;, and I found the missing certificates in their &lt;a href=&#34;https://certs.godaddy.com/repository/&#34;&gt;certificate repository&lt;/a&gt;. To include the certificate in my server, I followed &lt;a href=&#34;http://nginx.org/en/docs/http/configuring_https_servers.html#chains&#34;&gt;this&lt;/a&gt; tutorial. As a short summary:  You basically concatenate the two certificates together into a single file, which you use as your certificate file.&lt;/p&gt;

&lt;h3 id=&#34;cipher-mapping&#34;&gt;Cipher mapping&lt;/h3&gt;

&lt;p&gt;You should only allow the list of accepted ciphers as described in the &lt;a href=&#34;https://developer.apple.com/library/prerelease/ios/technotes/App-Transport-Security-Technote/#//apple_ref/doc/uid/TP40016240-CH1-SW3&#34;&gt;ATS technotes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A caveat is that this list provides the &lt;code&gt;Cipher Suite Name&lt;/code&gt;, but in the &lt;a href=&#34;https://nodejs.org/api/tls.html#tls_modifying_the_default_tls_cipher_suite&#34;&gt;Node  documentation&lt;/a&gt; they refer to the ciphers using their &lt;code&gt;OpenSSL names&lt;/code&gt;. I found the mapping to convert between the names &lt;a href=&#34;http://openssl.org/docs/manmaster/apps/ciphers.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;outdated-nodejs&#34;&gt;Outdated NodeJS&lt;/h3&gt;

&lt;p&gt;Finally, and this took me the longest to resolve, I was using a very out of date version of &lt;code&gt;NodeJS&lt;/code&gt;. My server was running &lt;a href=&#34;http://releases.ubuntu.com/trusty/&#34;&gt;Ubuntu - Trusty Tahr&lt;/a&gt;, and I did a normal &lt;code&gt;apt-get install&lt;/code&gt;, which installed &lt;code&gt;node v0.10.40&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I do not know the minimum version for this configuration to work, but I would suggest installing the latest (&lt;code&gt;v4.1.1&lt;/code&gt; at the time of writing) using the method described in the &lt;a href=&#34;https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions&#34;&gt;node installation guide&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>